name: Deploy to VPS
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check if secrets are set
        run: |
          echo "VPS_HOST: ${{ secrets.VPS_HOST }}"
          echo "VPS_USERNAME: ${{ secrets.VPS_USERNAME }}"
          echo "VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}"
          echo "GITHUB_REPOSITORY: ${{ github.repository }}"
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Define project directory and repo URL
            PROJECT_DIR="/home/diego/code/test-clone"
            REPO_URL="git@github.com:${{ github.repository }}.git"

             [ -s "/home/diego/.nvm/nvm.sh" ] && . "/home/diego/.nvm/nvm.sh"

            which npm
            which pm2

            # Check if project directory exists and is not empty
            if [ ! -d "$PROJECT_DIR" ] || [ -z "$(ls -A "$PROJECT_DIR")" ]; then
              echo "Cloning repository"
              mkdir -p "$PROJECT_DIR"
              git clone "$REPO_URL" "$PROJECT_DIR" || exit 1
            fi

            # Navigate to project directory
            cd "$PROJECT_DIR" || exit 1

            # Fetch and reset to match remote main branch
            git fetch origin
             git reset --hard origin/main

            # Clean install dependencies
            rm -rf node_modules || true
            rm -f package-lock.json || true
            npm install

            # Build the project
            npm run build

            # Stop previous PM2 process (if it exists)
            pm2 stop boilerplate || true
            pm2 delete boilerplate || true

            pm2 start npm --name "boilerplate" -- run start -- -p port
