name: Deploy to VPS
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check if secrets are set
        run: |
          echo "VPS_HOST: ${{ secrets.VPS_HOST }}"
          echo "VPS_USERNAME: ${{ secrets.VPS_USERNAME }}"
          echo "VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}"
          echo "GITHUB_REPOSITORY: ${{ github.repository }}"
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Define project directory and repo URL
            PROJECT_DIR="/home/diego/code/test-clone"
            REPO_URL="git@github.com:${{ github.repository }}.git"
            echo "PROJECT_DIR: $PROJECT_DIR"
            echo "REPO_URL: $REPO_URL"
            echo "PATH: $PATH"
            which npm
            which pm2

            # Set PATH explicitly (adjust these based on 'which npm' and 'which pm2')
            export PATH="$PATH:/home/diego/.nvm/versions/node/v20.11.0/bin:/usr/local/bin"
            # If using nvm, source it (uncomment if needed)
            # [ -s "/home/diego/.nvm/nvm.sh" ] && . "/home/diego/.nvm/nvm.sh"

            # Check if project directory exists and is not empty
            if [ ! -d "$PROJECT_DIR" ] || [ -z "$(ls -A "$PROJECT_DIR")" ]; then
              echo "Cloning repository"
              mkdir -p "$PROJECT_DIR"
              git clone "$REPO_URL" "$PROJECT_DIR" || exit 1
            fi

            # Navigate to project directory
            cd "$PROJECT_DIR" || exit 1

            # Fetch and reset to match remote main branch
            git fetch origin
            git reset --hard origin/main

            echo "PATH: $PATH"
            which npm
            which pm2

            # Install dependencies
            npm install

            # Build the project
            npm run build

            # Stop previous PM2 process (if it exists)
            pm2 stop my-app || true

            # Start the app with PM2 (add port if needed, e.g., -- start -p 3000)
            pm2 start npm --name "my-app" -- start -p port
